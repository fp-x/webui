--- ./webui/source/Styles/xb3/code/actionHandler/ajax_troubleshooting_logs.php
+++ ./webui/source/Styles/xb3/code/actionHandler/ajax_troubleshooting_logs.php	2015-05-04 11:39:36.230783877 -0600
@@ -1,11 +1,39 @@
 ï»¿<?php
 
-// the log type of GUI wanted
+function str2time($str){
+
+	$MONTH = array("Jan"=>1,"Feb"=>2,"Mar"=>3,"Apr"=>4,"May"=>5,"Jun"=>6,"Jul"=>7,"Aug"=>8,"Sep"=>9,"Oct"=>10,"Nov"=>11,"Dec"=>12);
+	// $timeT = preg_replace('/\s(?=\s)/', '', $str);
+	// $timeTmp = explode(" ", $timeT);
+	$timeTmp = preg_split("/[\s,]+/", $str);
+	$time  = array();
+
+	if (! empty($timeTmp[3])) {
+		//log time contains 'year'
+		$time['formatted_time'] = $timeTmp[3] .'/'. $MONTH[$timeTmp[0]] .'/'. $timeTmp[1] .' '. $timeTmp[2]; 
+		$time['firewall_time']  = $timeTmp[3] .'/'. $MONTH[$timeTmp[0]] .'/'. $timeTmp[1] .' '. $timeTmp[2]; 
+		$time['timeU'] = mktime(0, 0, 0, $MONTH[$timeTmp[0]], $timeTmp[1], $timeTmp[3]);
+	}
+	else {
+		if ($MONTH[$timeTmp[0]] <= $MONTH[date("M")]) {
+			$time['timeU'] = mktime(0, 0, 0, $MONTH[$timeTmp[0]], $timeTmp[1], date("Y"));
+			$time['formatted_time'] = date("Y") .'/'. $MONTH[$timeTmp[0]] .'/'. $timeTmp[1] .' '. $timeTmp[2]; 
+			$time['firewall_time']  = date("Y") .'/'. $MONTH[$timeTmp[0]] .'/'. $timeTmp[1] .' '. $timeTmp[2]; 
+		} 
+		else {
+			$time['timeU'] = mktime(0, 0, 0, $MONTH[$timeTmp[0]], $timeTmp[1], date("Y")-1);
+			$time['formatted_time'] = date("Y")-1 .'/'. $MONTH[$timeTmp[0]] .'/'. $timeTmp[1] .' '. $timeTmp[2]; 
+			$time['firewall_time']  = date("Y")-1 .'/'. $MONTH[$timeTmp[0]] .'/'. $timeTmp[1] .' '. $timeTmp[2]; 
+		}
+	}
+	//var_dump($time);
+	return $time;
+}
+
+
 $mode	= $_POST['mode'];
 $timef	= $_POST['timef'];
-
-// get Unix time of the target time point
-switch($timef) {
+switch($timef){			//	[$mintime, $maxtime)
 	case "Today":
 		$maxtime=strtotime("now");
 		$mintime=strtotime("today");
@@ -28,63 +56,125 @@
 	break;
 }
 
-// find each log entry
-if ("system" == $mode) {
-	$allDM = "Device.X_CISCO_COM_Diagnostics.DumpAllSyslog";
-}
-else if ("event" == $mode) {
-	$allDM = "Device.X_CISCO_COM_Diagnostics.DumpAllEventlog";
+$pos = 50;		//global file pointer where to read the value in a line
+
+if ($mode=="system"){
+
+	exec("/fss/gw/usr/ccsp/ccsp_bus_client_tool eRT getv Device.X_CISCO_COM_Diagnostics.Syslog.Entry. | grep 'type:' > /var/log_system.txt");
+	$file= fopen("/var/log_system.txt", "r");
+	$Log = array();
+	// for($i=0; !feof($file); $i++)
+	for($i=0; !feof($file); )
+	{
+		$time 	= substr(fgets($file),$pos);
+		$Tag	= substr(fgets($file),$pos);	//don't need, but have to read
+		$Level 	= substr(fgets($file),$pos);
+		$Des 	= substr(fgets($file),$pos);
+
+		// $Log[$i] =	array("time"=>$time, "Level"=>$Level, "Des"=>$Des);
+
+		if (feof($file)) break;					//PHP read last line will return false, not EOF!
+		
+		$timeArr = str2time(trim($time));
+		$timeU = $timeArr['timeU'];
+
+		if ($timeU > $maxtime || $timeU < $mintime) continue;	//only store the needed line
+		
+		$Log[$i++] = array("time"=>$timeArr['formatted_time'], "Level"=>$Level, "Des"=>$Des);
 }
-else if ("firewall" == $mode) {
-	$allDM = "Device.X_CISCO_COM_Security.InternetAccess.DumpAllFWlog";
+	fclose($file);
+	// array_pop($Log);	
+	
+	$sysLog = array_reverse($Log);
+	//dump($sysLog);
+	
+	$fh=fopen("/var/tmp/troubleshooting_logs_".$mode."_".$timef.".txt","w");
+	foreach ($sysLog as $key=>$value){
+		fwrite($fh, $value["Des"]."\t".$value["time"]."\t".$value["Level"]."\r\n");
 }
+	fclose($fh);
 
-$MONTH = array("Jan"=>1,"Feb"=>2,"Mar"=>3,"Apr"=>4,"May"=>5,"Jun"=>6,"Jul"=>7,"Aug"=>8,"Sep"=>9,"Oct"=>10,"Nov"=>11,"Dec"=>12);
-$logs  = array();
+	header("Content-Type: application/json");
+	echo json_encode($sysLog);	
 
-exec("ccsp_bus_client_tool eRT getv $allDM ", $raws);
+}
+else if ($mode=="event") {
 
-for ($i=6; $i<count($raws);)
+	exec("/fss/gw/usr/ccsp/ccsp_bus_client_tool eRT getv Device.X_CISCO_COM_Diagnostics.Eventlog.Entry. | grep 'type:' > /var/log_event.txt");
+	$file= fopen("/var/log_event.txt", "r");
+	$Log = array();
+	// for($i=0; !feof($file); $i++)
+	for($i=0; !feof($file); )
 {
-	if ("firewall" == $mode) {
-		$Count		= $raws[$i++];	//attempts, count
-		$SourceIP	= $raws[$i++];	//source IP, not used
-		$User		= $raws[$i++];	//user, not used
-		$TargetIP	= $raws[$i++];	//target IP, not used
-		$Level		= $raws[$i++];	//action proceed by firewall
-		$time		= $raws[$i++];	//trigger time
-		$Des		= $raws[$i++].", $Count Attempts.";	//description
+		$time 	= substr(fgets($file),$pos);
+		$ID 	= substr(fgets($file),$pos);	//don't need, but have to read
+		$Level 	= substr(fgets($file),$pos);
+		$Des 	= substr(fgets($file),$pos);
+
+		// $Log[$i] =	array("time"=>$time, "Level"=>$Level, "Des"=>$Des);
+
+		if (feof($file)) break;					//PHP read last line will return false, not EOF!
+		
+		$timeArr = str2time(trim($time));
+		$timeU = $timeArr['timeU'];
+		if ($timeU > $maxtime || $timeU < $mintime) continue;	//only store the needed line
+		
+		$Log[$i++] = array("time"=>$timeArr['formatted_time'], "Level"=>$Level, "Des"=>$Des);
 	}
-	else {
-		$time 		= $raws[$i++];	//system or event time
-		$Tag		= $raws[$i++];	//localxxx, not used
-		$Level 		= $raws[$i++];	//info, warning, error
-		$Des 		= $raws[$i++];	//description
+	fclose($file);
+	// array_pop($Log);	
+	
+	$docLog = array_reverse($Log);
+		
+	$fh=fopen("/var/tmp/troubleshooting_logs_".$mode."_".$timef.".txt","w");
+	foreach ($docLog as $key=>$value){
+		fwrite($fh, $value["Des"]."\t".$value["time"]."\t".$value["Level"]."\r\n");
+	}
+	fclose($fh);
+	
+	header("Content-Type: application/json");
+	echo json_encode($docLog);
+	
 	}		
+else {	
+
+	exec("/fss/gw/usr/ccsp/ccsp_bus_client_tool eRT getv Device.X_CISCO_COM_Security.InternetAccess.LogEntry. | grep 'type:' > /var/log_firewall.txt");
+	$file= fopen("/var/log_firewall.txt", "r");
+	$Log = array();
+	// for($i=0; !feof($file); $i++)
+	for($i=0; !feof($file); )
+	{
+		$Count		= substr(fgets($file),$pos);
+		$SourceIP	= substr(fgets($file),$pos);	//don't need, but have to read
+		$User		= substr(fgets($file),$pos);
+		$TargetIP	= substr(fgets($file),$pos);
+		$Type		= substr(fgets($file),$pos);
+		$time		= substr(fgets($file),$pos);
+		$Des		= substr(fgets($file),$pos);
 	
-	$timeT = explode(' ', $time);	//Oct 10 17:09:17 2014
-	$timeU = mktime(0, 0, 0, $MONTH[$timeT[0]], $timeT[1], $timeT[3]);
+		// $Log[$i] =	array("time"=>$time, "Des"=>$Des, "Count"=>$Count, "Target"=>$TargetIP,"Source"=>$SourceIP,"Type"=>$Type);
+
+		if (feof($file)) break;						//PHP read last line will return false, not EOF!
+
+		$timeArr = str2time(trim($time));
+		$timeU = $timeArr['timeU'];
 	if ($timeU > $maxtime || $timeU < $mintime) continue;	//only store the needed line
 	
-	array_push($logs, array("time"=>$timeT[3].'/'.$MONTH[$timeT[0]].'/'.$timeT[1].' '.$timeT[2], "Level"=>$Level, "Des"=>$Des));
+		$Log[$i++] = array("time"=>$timeArr['firewall_time'], "Des"=>$Des, "Count"=>$Count, "Target"=>$TargetIP,"Source"=>$SourceIP,"Type"=>$Type);
 }
+	fclose($file);
 
-// last log shows first
-$logs = array_reverse($logs);
+	$firewallLog = array_reverse($Log);
 
-// logic of download log file from GUI
 $fh=fopen("/var/tmp/troubleshooting_logs_".$mode."_".$timef.".txt","w");
-foreach ($logs as $key=>$value) {
-	fwrite($fh, $value["time"]."\t".$value["Level"]."\t".$value["Des"]."\r\n");
+	foreach ($firewallLog as $key=>$value){
+		fwrite($fh, $value["Des"].", ".$value["Count"]." Attemps, ".$value["time"]."\t".$value["Type"]."\r\n");
 }
 fclose($fh);
 
-// return results to GUI in json format
 header("Content-Type: application/json");
-echo json_encode($logs);	
+	echo json_encode($firewallLog);
+}
 
-// exec("/fss/gw/usr/ccsp/ccsp_bus_client_tool eRT getv Device.X_CISCO_COM_Diagnostics.Syslog.Entry. | grep 'type:' > /var/log_system.txt");
-// exec("/fss/gw/usr/ccsp/ccsp_bus_client_tool eRT getv Device.X_CISCO_COM_Diagnostics.Eventlog.Entry. | grep 'type:' > /var/log_event.txt");
-// exec("/fss/gw/usr/ccsp/ccsp_bus_client_tool eRT getv Device.X_CISCO_COM_Security.InternetAccess.LogEntry. | grep 'type:' > /var/log_firewall.txt");
 
 ?>
