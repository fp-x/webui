--- ./webui/source/Styles/xb3/code/remote_management.php
+++ ./webui/source/Styles/xb3/code/remote_management.php	2015-04-22 14:22:31.206843009 -0600
@@ -46,9 +46,12 @@
 		title_off: "Disable HTTP",
 		state: HTTP ? "on" : "off"
 	}).change(function() {
+		$("#http").val(HTTPPORT);
+		validator.element("#http");
 		var isUHTTPDisabled = $(this).radioswitch("getState").on === false;
 		if(isUHTTPDisabled) {
 			document.getElementById('http').disabled = true;
+			remote_access_allowe();
 		} else {
 			// document.getElementById('http').disabled = false;
 			jConfirm(
@@ -57,6 +60,7 @@
 				,function(ret) {
 					if(ret) {
 						document.getElementById('http').disabled = false;
+						remote_access_allowe();
 					}
 					else{
 						$("#http_switch").radioswitch("doSwitch", "off");
@@ -76,9 +80,12 @@
 		title_off: "Disable HTTPS",
 		state: HTTPS ? "on" : "off"
 	}).change(function() {
+		$("#https").val(HTTPSPORT);
+		validator.element("#https");
 		var isUHTTPsDisabled = $(this).radioswitch("getState").on === false;
 		if(isUHTTPsDisabled) {
 			document.getElementById('https').disabled = true;
+			remote_access_allowe();
 		} else {
 			// document.getElementById('https').disabled = false;
 			jConfirm(
@@ -87,6 +94,7 @@
 				,function(ret) {
 					if(ret) {
 						document.getElementById('https').disabled = false;
+						remote_access_allowe();
 					}
 					else{
 						$("#https_switch").radioswitch("doSwitch", "off");
@@ -410,12 +418,103 @@
 	}
 });
 
+$("#https").keydown(function(){	validator.element($(this)); });
+$("#http").keydown(function() {	validator.element($(this)); });
+
 // $(":text").val("");
+var snetCal = {
+
+	getsnetRange : function( ip, snetMask )
+	{
+		var ipNum = snetCal.toDeci( ip );
+		var snetMaskNum = snetCal.toDeci( snetMask );
+	
+		var prefix = 0;
+		var newPrefix = 0;
+		var prefixSize;
+	
+		for( prefixSize = 0; prefixSize < 32; prefixSize++ )
+		{
+			newPrefix = ( prefix + ( 1 << ( 32 - ( prefixSize + 1 ) ) ) ) >>> 0;
+		
+			if( ( ( snetMaskNum & newPrefix ) >>> 0 ) !== newPrefix )
+			{
+				break;
+			}
+		
+			prefix = newPrefix;		
+		} 
+		
+		return snetCal.getMaskRange( ipNum, prefixSize );		 
+	},
+
+	getMaskRange : function( ipNum, prefixSize )
+	{
+		var prefixMask = snetCal.getPrefixMask( prefixSize );
+		var lowMask = snetCal.getMask( 32 - prefixSize );
+		
+		var ipLow = ( ipNum & prefixMask ) >>> 0;
+		var ipHigh = ( ( ( ipNum & prefixMask ) >>> 0 ) + lowMask ) >>> 0;
+		
+		return {
+			'ipLow'		: snetCal.toStr( ipLow ),
+			'ipHigh'	: snetCal.toStr( ipHigh )
+		};
+	},
+
+	getPrefixMask : function( prefixSize )
+	{
+		var mask = 0;
+		var i;
+		
+		for( i = 0; i < prefixSize; i++ )
+		{
+			mask += ( 1 << ( 32 - ( i + 1 ) ) ) >>> 0;
+		}
 
+		return mask;
+	},
+	
+	getMask : function( maskSize )
+	{
+		var mask = 0;
+		var i;
+		
+		for( i = 0; i < maskSize; i++ )
+		{
+			mask += ( 1 << i ) >>> 0;
+		}
+		
+		return mask;
+	},
+	
+	toDeci : function( ipString )
+	{
+		var d = ipString.split( '.' );
+		return ( ( ( ( ( ( +d[ 0 ] ) * 256 ) + ( +d [ 1 ] ) ) * 256 ) + ( +d[ 2 ] ) ) * 256 ) + ( +d[ 3 ] );
+	},
+	
+	toStr : function( ipNum )
+	{	
+		var d = ipNum % 256;
+		
+		for( var i = 3; i > 0; i-- )
+		{ 
+			ipNum   = Math.floor( ipNum / 256 );
+			d       = ipNum % 256 + '.' + d;
+		}
+		
+		return d;
+	}
+};
 $(".btn").click(function(){
 	var isValid = true;
 	$("p.error").remove();
 	
+	var http_enabled  = $("#http_switch").radioswitch("getState").on;
+	var https_enabled = $("#https_switch").radioswitch("getState").on;
+
+	if(http_enabled || https_enabled){
 	if ($(":radio[value='single']").prop("checked")){
 		if (IsBlank("ip_address_") && IsBlank("ipv6_address_")){
 			jAlert("Please input at least one single address of IPv4 or IPv6!");
@@ -473,13 +572,19 @@
 	}
 	
 	if (!isValid) return;
+	}
 
 	if ($("#telnet1_switch").radioswitch("getState").on && $("#ssh1_switch").radioswitch("getState").on)
 	{
-		jAlert("Telnet and SSH can not be enabled at the same time\r\nPlease disable at least one of them");
+		jAlert("Telnet and SSH can not be enabled at the same time.\r\nPlease disable at least one of them.");
 		return;
 	}
 
+	var telnet = $("#telnet1_switch").radioswitch("getState").on;
+	if (TELNET==telnet) telnet="notset";
+	var ssh = $("#ssh1_switch").radioswitch("getState").on;
+	if (SSH==ssh) ssh="notset";
+
  	var http = $("#http_switch").radioswitch("getState").on;
 	if (HTTP==http) http="notset";
 	var httpport=$('#http').val();
@@ -492,6 +597,13 @@
 	// if (HTTPSPORT==httpsport || HTTPS=="false") httpsport="notset";
 	if (HTTPSPORT==httpsport) httpsport="notset";
 
+	if(!HTTP && !HTTPS){
+		allowtype	="notset";
+		startIP		="notset";
+		endIP		="notset";
+		startIPv6	="notset";
+		endIPv6		="notset";
+	} else {
 	var allowtype=$('input[name="single"]:radio:checked').val();
 	switch (allowtype) {
 		case "single":
@@ -534,10 +646,38 @@
 		else allowtype=false;
 	}
 
-	var telnet = $("#telnet1_switch").radioswitch("getState").on;
-	if (TELNET==telnet) telnet="notset";
-	var ssh = $("#ssh1_switch").radioswitch("getState").on;
-	if (SSH==ssh) ssh="notset";
+		<?php
+			$ipv4_gw 	= getStr("Device.X_CISCO_COM_DeviceControl.LanManagementEntry.1.LanIPAddress");
+			$ipv4_smask 	= getStr("Device.X_CISCO_COM_DeviceControl.LanManagementEntry.1.LanSubnetMask");
+		?>
+		var ipv4_gw 	= "<?php echo $ipv4_gw;?>";
+		var ipv4_smask 	= "<?php echo $ipv4_smask;?>";
+		var lanRange 	= snetCal.getsnetRange( ipv4_gw, ipv4_smask );
+		var ipv4_rhigh 	= lanRange["ipHigh"];
+		var ipv4_rlow 	= lanRange["ipLow"];
+
+		var allowtype_Compare=$('input[name="single"]:radio:checked').val();
+		var startIP_single=$("#ip_address_1").val()+"."+$("#ip_address_2").val()+"."+$("#ip_address_3").val()+"."+$("#ip_address_4").val();
+		var startIP_Compare=$("#rangeip_address_1").val()+"."+$("#rangeip_address_2").val()+"."+$("#rangeip_address_3").val()+"."+$("#rangeip_address_4").val();
+		var endIP_Compare=$("#endip_address_1").val()+"."+$("#endip_address_2").val()+"."+$("#endip_address_3").val()+"."+$("#endip_address_4").val();
+
+		if(allowtype_Compare == "single"){
+			if( (snetCal.toDeci(startIP_single) > snetCal.toDeci(ipv4_rlow)) && (snetCal.toDeci(startIP_single) < snetCal.toDeci(ipv4_rhigh)) ){
+				jAlert("Invalid IPv4 Address.");
+				return;
+			}
+		}else if(allowtype_Compare == "range"){
+			if( (snetCal.toDeci(startIP_Compare) > snetCal.toDeci(ipv4_rlow)) && (snetCal.toDeci(startIP_Compare) < snetCal.toDeci(ipv4_rhigh)) ){
+				jAlert("Invalid IPv4 Start Address.");
+				return;
+			}
+			if( (snetCal.toDeci(endIP_Compare) > snetCal.toDeci(ipv4_rlow)) && (snetCal.toDeci(endIP_Compare) < snetCal.toDeci(ipv4_rhigh)) ){
+				jAlert("Invalid IPv4 End Address.");
+				return;
+			}
+				
+		}
+	}
 	
 	// if($("#pageForm").valid()) {	
 		jProgress('This will take several seconds!', 60);
@@ -594,6 +734,46 @@
 		$(".div_global").hide();
 	}
 
+function remote_access_block(){
+	$("#single, #range, #any").attr('disabled', true);
+
+	$("#ip_address_1").prop("disabled", true);
+   	$("#ip_address_2").prop("disabled", true);
+	$("#ip_address_3").prop("disabled", true);
+   	$("#ip_address_4").prop("disabled", true);
+	$("#rangeip_address_1").prop("disabled", true);
+   	$("#rangeip_address_2").prop("disabled", true);
+    	$("#rangeip_address_3").prop("disabled", true);
+   	$("#rangeip_address_4").prop("disabled", true);
+	$("#endip_address_1").prop("disabled", true);
+   	$("#endip_address_2").prop("disabled", true);
+	$("#endip_address_3").prop("disabled", true);
+   	$("#endip_address_4").prop("disabled", true);
+	$("[id^='ipv6_']").prop("disabled", true);
+	$("[id^='rangeipv6_']").prop("disabled", true);
+	$("[id^='endipv6_']").prop("disabled", true);
+	
+	$("#message_note").show();
+}
+
+	$("#message_note").hide();
+
+	if(!HTTP && !HTTPS){remote_access_block();}
+	
+	function remote_access_allowe(){
+		var http_enabled  = $("#http_switch").radioswitch("getState").on;
+		var https_enabled = $("#https_switch").radioswitch("getState").on;
+		var allowtype	  =$('input[name="single"]:radio:checked').val();
+
+		if(http_enabled || https_enabled){
+			$("#message_note").hide();
+			$("#"+allowtype).trigger("click");
+			$("#single, #range, #any").attr('disabled', false);
+		} else {
+		remote_access_block();
+		}
+	}
+
 });
 </script>
 <div id="content">
@@ -601,7 +781,7 @@
 	<div id="educational-tip">
         <p class="tip">Remote Management allows the gateway to be remotely accessed by a customer account representative to perform troubleshooting or maintenance.</p>
 	    <p class="hidden">Remote Management can be used via HTTP and HTTPS.</p>
-		<p class="hidden">Enter the value for HTTP Port and click the button Enable, then you can access your device from HTTP.For example,if the WAN IP address is 11.22.11.22 and the HTTP port number is 8080, then you would use http://11.22.11.22:8080</p>
+		<p class="hidden">Enable the HTTP option and enter the value for HTTP Port, then you can access your device from HTTP. For example,if the WAN IP address is 11.22.11.22 and the HTTP port number is 8080, then you would use http://11.22.11.22:8080</p>
 		<p class="hidden">It's the same way to configure HTTPS.</p> 
 		<p class="hidden">Select whether you would like to have Remote Management open to all Internet IP Addresses, an Internet IP Address range, or a single Internet IP Address.</p>
 	</div>
@@ -651,6 +831,7 @@
 			?>		
 			</strong></p>
 		</div>
+		<p  id="message_note" style="position:relative; left:40px" class="error">Please enable HTTP or HTTPS to configure Remote Access Allowed From.</p>
 	</div> <!-- end .module -->
 	<div class="module forms">
 	    <h2>Remote Access Allowed From</h2><br/>
@@ -884,7 +1065,7 @@
 		<?php }
 		} ?>
 		<div>
-			<p> Note:This option will allow any computer on the Internet access to your network and may cause a security risk.</p>
+			<p> Note:This option will allow any computer on the Internet to access your network and may cause a security risk.</p>
 		</div>
 	</div>
 	<div class="module forms div_global">
