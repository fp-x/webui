--- ./webui/source/Styles/xb3/code/connected_devices_computers.php
+++ ./webui/source/Styles/xb3/code/connected_devices_computers.php	2015-06-10 14:05:49.101030780 -0600
@@ -10,6 +10,9 @@
 <?php 
 	$ret = init_psmMode("Connected Devices - Devices", "nav-cdevices");
 	if ("" != $ret){echo $ret;	return;}
+
+	$beginAddr 	= getStr("Device.DHCPv4.Server.Pool.1.MinAddress");
+	$endAddr 	= getStr("Device.DHCPv4.Server.Pool.1.MaxAddress");
 ?>
 
 <style>
@@ -23,11 +26,19 @@
 $(document).ready(function() {
     comcast.page.init("Connected Devices - Devices", "nav-cdevices");
 
+	var privateDisabled = ("<?php echo $_SESSION['lanMode']; ?>" == "bridge-static") ? true : false ;
+
+	var beginAddr	= "<?php echo $beginAddr; ?>";
+	var endAddr		= "<?php echo $endAddr; ?>";
+	var beginArr	= beginAddr.split(".");
+	var endArr		= endAddr.split(".");
+
     var login_user = "<?php echo $_SESSION["loginuser"]; ?>";
     //console.log(login_user);
 
     if(login_user != "mso") {
     	$('.div-pub-network').remove();
+    	$('.div-xhs-network').remove();
     	$('#online-table-cap').html('Online Devices');
     	$('#offline-table-cap').html('Offline Devices');
     }
@@ -92,19 +103,20 @@
     });
 
     $('.device-name').click(function(){
-
+	if(!(privateDisabled && $(this).hasClass("private"))){
         $(this).next().toggleClass('device-hide');
        //$('.device-info').toggleClass('device-hide');
-
+	}
     });
 
     $('.device-name').keypress(function(ev) {
-
+	if(!(privateDisabled && $(this).hasClass("private"))){
     	var keycode = (ev.keyCode ? ev.keyCode : ev.which);
         if (keycode == '13') { //enter key, preventDefault is for bug fixing Firefox/IE compatiblity issue
         	ev.preventDefault(); 
         	$(this).next().toggleClass('device-hide');
         }
+	}
     });
 
 
@@ -116,8 +128,10 @@
         var editButn = "#edit-device-" + onlineDeviceInstanceArr[x];
         //alert(editButn);
     	$(butn).click(function(){
+		if(!(privateDisabled && $(butn).hasClass("private"))){
     		$('.cnt-device-main').hide();
             $(editButn).show();
+		}
     	});
 
     	var submitEditDevice = "#submit_editDevice-" + onlineDeviceInstanceArr[x];
@@ -128,41 +142,31 @@
         var comment          = "#comment-"           + onlineDeviceInstanceArr[x];
 
         var dhcp_mac   = "#dhcp-mac"   + onlineDeviceInstanceArr[x];
-        var static_mac = "#static-mac" + onlineDeviceInstanceArr[x];
         var static_ip  = "#static-ip"  + onlineDeviceInstanceArr[x];
     	//alert(onlineDeviceInstanceArr[x]);
 
     	var isDHCP = $(ipDHCP).is(":checked");
     	if (isDHCP) {
-    	    $(dhcp_mac).show();
-    	    $(static_mac).hide();
     	    $(static_ip).hide();
     	}
     	else{
-    		$(dhcp_mac).hide();
-    	    $(static_mac).show();
     	    $(static_ip).show();
     	}
 
     	$(ipResv).click(function(){
-    		$(dhcp_mac).hide();
-    	    $(static_mac).show();
     	    $(static_ip).show();
     	});
     	$(ipDHCP).click(function(){
-    		$(dhcp_mac).show();
-    	    $(static_mac).hide();
     	    $(static_ip).hide();
     	});
     	
         var hostName = onlineHostNameArr[x];        
-        var macAddress = $(macAddr).val();
+        var macAddress = onlineHostMAC[x];
 
     	$(submitEditDevice).click(function(e){
 
             e.preventDefault();
 
-            var macAddress = $(macAddr).val();
             var reseverd_ipAddr = $(staticIPAddr).val();
             var isDHCP = $(ipDHCP).is(":checked");
             var Comments = $(comment).val();
@@ -183,6 +187,20 @@
                 }
             }
             else{
+				//to check if "Reserved IP Address" is in "DHCP Pool range"
+				if(reseverd_ipAddr==""){
+					jAlert("Please enter Reserved IP Address !");
+					return;
+				}
+				var reseverd_ipArr	= reseverd_ipAddr.split(".");
+				for(i=0;i<4;i++){
+					if(parseInt(beginArr[i]) > parseInt(reseverd_ipArr[i]) || parseInt(reseverd_ipArr[i]) > parseInt(endArr[i])){
+						jAlert("Reserved IP Address is not in valid range:\n"+beginAddr+" ~ "+endAddr);
+						return;
+					}
+				}
+
+				// this is to provide info to edit REservedIP
                     var editDevInfo = '{"Comments": "'+ Comments +'", "hostName": "' + hostName + '", "macAddress": "' + macAddress + '", "reseverd_ipAddr": "' + reseverd_ipAddr + '"}';
             } 
 
@@ -216,6 +234,7 @@
 
     $('.confirm').unbind('click').click(function(e){
     
+	    if(!(privateDisabled && $(this).hasClass("private"))){
 	    e.preventDefault();
 	    var message = ($(this).attr("title").length > 0) ? "Are you sure you want to " + $(this).attr("title") + "?" : "Are you sure?";
 	    var name = $(this).attr('name');
@@ -224,10 +243,14 @@
 
 	    if($(this).hasClass('XfinitySSID')){
 			var devBlockInfo = '{"XfinitySSID": "true", "hostName": "'+devInfo.dev_name+'", "macAddr": "'+devInfo.mac_addr+'"}';
-			var fileName = "wireless_network_configuration.php";
+				var fileName = "wireless_network_configuration.php?mac_ssid=5";
+		    }
+		    else if($(this).hasClass('xhsSSID')){
+				var devBlockInfo = '{"xhsSSID": "true", "hostName": "'+devInfo.dev_name+'", "macAddr": "'+devInfo.mac_addr+'"}';
+				var fileName = "wireless_network_configuration.php?mac_ssid=3";
 	    }
 	    else{
-	        var devBlockInfo = '{"hostName": "'+devInfo.dev_name+'", "macAddr": "'+devInfo.mac_addr+'"}';	
+			var devBlockInfo = '{"privateDevice": "true", "hostName": "'+devInfo.dev_name+'", "macAddr": "'+devInfo.mac_addr+'"}';	
 	        var fileName = "managed_devices.php";
 	    }//end of else
 
@@ -252,8 +275,27 @@
 				   });
 		        } //end of if ret    
 		}); //end of jConfirm
+		}//end of if hasClass private
     }); //end of confirm click
 
+	if(privateDisabled){
+		$("#online-private, #offline-private").addClass("disabled");
+		$(".add-Client").addClass("disabled");
+
+		$("#online-private").find(".device-name").addClass("disabled");
+		$("#online-private").find(".btn").addClass("disabled");
+
+		$("#offline-private").find(".device-name").addClass("disabled");
+		$("#offline-private").find(".btn").addClass("disabled");
+	}
+
+	$('.add-Client').click(function(e){
+		if(!privateDisabled){
+			if($(this).hasClass("lan")) window.location.href = "connected_devices_computers_add.php";
+			else if($(this).hasClass("wifi")) window.location.href = "wireless_network_configuration_wps.php";
+		}
+	});
+
 });
 
 </script>
@@ -262,12 +304,12 @@
 	<h1>Connected Devices > Devices</h1>
      <div id="educational-tip">
 				<p  class="tip">View information about devices currently connected to your network, as well as connection history.</p>
-				<p  class="hidden">Every computer listed below was auto discovered via DHCP.</p>
-				<p  class="hidden"><strong>Online Computers</strong> are currently connected to your Gateway.</p>
-				<p  class="hidden"><strong>Offline Computers</strong>  were once connected to your network, but not currently.</p>
+				<p  class="hidden">Every device listed below was auto discovered via DHCP.</p>
+				<p  class="hidden"><strong>Online Devices</strong> are currently connected to your Gateway.</p>
+				<p  class="hidden"><strong>Offline Devices</strong>  were once connected to your network, but not currently.</p>
 				<p  class="hidden">To block Internet access to a device connected to your Gateway, click the <strong>X</strong> button. </p>
     </div>
-	<div  class="module data">
+	<div id='online-private' class="module data">
         <h2 id='online-table-cap'>Online Devices-Private Network</h2>
 		<table   class="data"  summary="This table displays Online Devices connected to priviate network">
 		    <tr>
@@ -316,7 +358,7 @@
 
 	$rootObjName    = "Device.Hosts.Host.";
 	$paramNameArray = array("Device.Hosts.Host.");
-	$mapping_array  = array("PhysAddress", "IPAddress", "Layer1Interface", "HostName", "Active", "AddressSource", "X_CISCO_COM_RSSI", "Comments");
+	$mapping_array  = array("PhysAddress", "IPAddress", "Layer1Interface", "HostName", "Active", "AddressSource", "X_CISCO_COM_RSSI", "Comments", "IPv4Address.1.IPAddress", "IPv6Address.1.IPAddress", "IPv6Address.2.IPAddress");
 
 	$HostIndexArr = DmExtGetInstanceIds("Device.Hosts.Host.");
 	if(0 == $HostIndexArr[0]){  
@@ -329,6 +371,7 @@
 		$onlinePrivateInstanceArr = array();
 		$onlinePrivateHostNameArr = array();
 		$onlineHostNameArr        = array();
+		$onlineHostMAC        	  = array();
 		$onlinePrivateNetworkHost['hostNum'] = 0;
 		$offlinePrivateNetworkHost['hostNum'] = 0;
 		$PublicNetworkHost['hostNum']  = 0;
@@ -339,6 +382,17 @@
 			
 			//dump($Host);
 
+			//check if online device is there in Blocked Devices List using MAC Address
+			//if it's there remove 'X' button for "Online Blocked Devices"
+			$MDIDs=explode(",",getInstanceIDs("Device.X_Comcast_com_ParentalControl.ManagedDevices.Device."));
+			$arrayBlockMAC=array();
+			foreach ($MDIDs as $key=>$i) {
+				$type = getStr("Device.X_Comcast_com_ParentalControl.ManagedDevices.Device.".$i.".Type");
+				if($type == "Block") {
+					array_push($arrayBlockMAC, getStr("Device.X_Comcast_com_ParentalControl.ManagedDevices.Device.".$i.".MACAddress"));
+				}
+			}
+
 		    //This for loop aims to construct online and offline network host arrays based on $Host		    
 		    for ($i=0,$j=0,$k=0,$x=0; $i < $HostNum; $i++) { 
 
@@ -361,21 +415,31 @@
 			        	$onlinePrivateNetworkHost["$j"]['HostName'] = $Host["$i"]['HostName'];
 			        array_push($onlineHostNameArr, $onlinePrivateNetworkHost["$j"]['HostName']);
 
-                    $onlinePrivateNetworkHost["$j"]['IPAddress'] = $Host["$i"]['IPAddress'];
-			        //$onlinePrivateNetworkHost["$j"]['IPv6Address'] = $Host["$i"]['IPv6Address'];
+                    $onlinePrivateNetworkHost["$j"]['IPv4Address'] = $Host["$i"]['IPv4Address.1.IPAddress'];
+                    $onlinePrivateNetworkHost["$j"]['IPv6Address1'] = $Host["$i"]['IPv6Address.1.IPAddress'];
+                    $onlinePrivateNetworkHost["$j"]['IPv6Address2'] = $Host["$i"]['IPv6Address.2.IPAddress'];
+
                     $onlinePrivateNetworkHost["$j"]['PhysAddress'] = strtoupper($Host["$i"]['PhysAddress']);
+		            array_push($onlineHostMAC, $onlinePrivateNetworkHost["$j"]['PhysAddress']);
+
                     $onlinePrivateNetworkHost["$j"]['AddressSource'] = $Host["$i"]['AddressSource'];
                     $onlinePrivateNetworkHost["$j"]['Connection'] = $tmpHost['connectionType'];
                     $onlinePrivateNetworkHost["$j"]['Comments'] = $Host["$i"]['Comments'];
 
 
                     if (stristr($tmpHost['connectionType'], 'Wi-Fi')) {
-                       $onlinePrivateNetworkHost[$j]['RSSI'] = $Host[$i]['X_CISCO_COM_RSSI'];
+                       $onlinePrivateNetworkHost[$j]['RSSI'] = $Host[$i]['X_CISCO_COM_RSSI']." dBm";
                     }
                     else {
                        $onlinePrivateNetworkHost[$j]['RSSI'] = "NA";
                     }
 
+					if(in_array($onlinePrivateNetworkHost["$j"]['PhysAddress'], $arrayBlockMAC)){
+						$onlinePrivateNetworkHost["$j"]['Blocked'] = true;
+					} else {
+						$onlinePrivateNetworkHost["$j"]['Blocked'] = false;
+					}
+
                     $j++;
 		      	}
 		      	else {
@@ -388,13 +452,21 @@
 			        else
 			        	$offlinePrivateNetworkHost["$k"]['HostName'] = $Host["$i"]['HostName'];
 
-                    $offlinePrivateNetworkHost["$k"]['IPAddress'] = $Host["$i"]['IPAddress'];
-			        //$offlinePrivateNetworkHost["$k"]['IPv6Address'] = $Host["$i"]['IPv6Address'];
+                    $offlinePrivateNetworkHost["$k"]['IPv4Address'] = $Host["$i"]['IPv4Address.1.IPAddress'];
+                    $offlinePrivateNetworkHost["$k"]['IPv6Address1'] = $Host["$i"]['IPv6Address.1.IPAddress'];
+                    $offlinePrivateNetworkHost["$k"]['IPv6Address2'] = $Host["$i"]['IPv6Address.2.IPAddress'];
+
                     $offlinePrivateNetworkHost["$k"]['PhysAddress'] = strtoupper($Host["$i"]['PhysAddress']);
                     $offlinePrivateNetworkHost["$k"]['Connection'] = $tmpHost['connectionType'];
                     $offlinePrivateNetworkHost["$k"]['AddressSource'] = $Host["$i"]['AddressSource'];
                     $offlinePrivateNetworkHost["$k"]['Comments'] = $Host["$i"]['Comments'];
 
+					if(in_array($offlinePrivateNetworkHost["$k"]['PhysAddress'], $arrayBlockMAC)){
+						$offlinePrivateNetworkHost["$k"]['Blocked'] = true;
+					} else {
+						$offlinePrivateNetworkHost["$k"]['Blocked'] = false;
+					}
+
                     $k++;
 		      	}	
 		      }		     
@@ -410,17 +482,8 @@
         var onlineDeviceNum = ", $onlinePrivateNetworkHost['hostNum'] , "; 
         var onlineDeviceInstanceArr = ", json_encode($onlinePrivateInstanceArr) , ";
         var onlineHostNameArr = ", json_encode($onlineHostNameArr) ,";
-        //alert(onlineDeviceNum);
-        //alert(onlineDeviceInstanceArr);
-        //alert(onlineHostNameArr);
+		var onlineHostMAC = ", json_encode($onlineHostMAC) ,";
 	</script>";
-	//dump($onlineInstanceArr);
-	//dump(json_encode($onlineInstanceArr));
-	//dump($onlinePrivateNetworkHost['hostNum']);
-	//dump($offlinePrivateNetworkHost['hostNum']);
-	//dump($onlinePrivateNetworkHost);
-	//dump($offlinePrivateNetworkHost);
-
 	?>	
      
     <?php 
@@ -430,42 +493,21 @@
          	$mac_addr = $onlinePrivateNetworkHost["$x"]['PhysAddress'];
          	$AddrSrc  = $onlinePrivateNetworkHost["$x"]['AddressSource'];
 
+		if($onlinePrivateNetworkHost["$x"]['Blocked']) $style = "&nbsp;";
+		else $style = "<input type='button' id=" . "'online-X-" .$k. "'" . " value='X' tabindex='0' title=\"add this device to Blocked Devices List \" name='{\"dev_name\":\"$dev_name\", \"mac_addr\":\"$mac_addr\"}'  class=\"btn confirm private\"></input>";
+
          	if($k % 2)  $odd = "";
 				else $odd = " class='odd'";
          	echo "
 		    <tr $odd>
-		        <td headers='host-name'><a href='javascript:void(0)' tabindex='0' class=\"label device-name\"><u>" , $onlinePrivateNetworkHost["$x"]['HostName'] , "</u></a>
+		        <td headers='host-name'><a href='javascript:void(0)' tabindex='0' class=\"label device-name private\"><u>" , $onlinePrivateNetworkHost["$x"]['HostName'] , "</u></a>
 
 					<div class=\"device-info\">
-						<dl><dd><br/></dd>
-							<dd><b>IPV4 Address</b><br/>", $onlinePrivateNetworkHost["$x"]['IPAddress'] , "</dd>";
+						<dl><dd><br/></dd>";
 			
-			//Support IPV6 ADDRESS, maybe multiple address
-			$v6_count = intval(getStr("Device.Hosts.Host.".$onlinePrivateNetworkHost["$x"]['instanceID'].".IPv6AddressNumberOfEntries"));
-			if ($v6_count)	//has IPv6 address
-			{
-				$v6_global = array();
-				$v6_local  = array();
-
-				for ($a=1; $a<=$v6_count; $a++)
-				{
-					$v6_addr = getStr("Device.Hosts.Host.".$onlinePrivateNetworkHost["$x"]['instanceID'].".IPv6Address.$a.IPAddress");
-					if (strstr($v6_addr, "fe80::")) {
-						array_push($v6_local, strtoupper($v6_addr));
-					}
-					else {
-						array_push($v6_global, strtoupper($v6_addr));
-					}
-				}
-				
-				foreach ($v6_global as $v){
-					echo '<dd><b>IPV6 Address</b><br/>'.$v.'</dd>';
-				}
-				
-				foreach ($v6_local as $v){
-					echo '<dd><b>Local Link IPV6 Address</b><br/>'.$v.'</dd>';
-				}
-			}
+						if ($onlinePrivateNetworkHost["$x"]['IPv4Address'] != '') {echo "<dd><b>IPV4 Address</b><br/>", $onlinePrivateNetworkHost["$x"]['IPv4Address'] , "</dd>";}
+						if ($onlinePrivateNetworkHost["$x"]['IPv6Address2'] != '') {echo "<dd><b>IPV6 Address</b><br/>", $onlinePrivateNetworkHost["$x"]['IPv6Address2'] , "</dd>";}
+						if ($onlinePrivateNetworkHost["$x"]['IPv6Address1'] != '') {echo "<dd><b>Local Link IPV6 Address</b><br/>", $onlinePrivateNetworkHost["$x"]['IPv6Address1'] , "</dd>";}
 			
 			echo "			<dd><b>MAC Address</b><br/>", $onlinePrivateNetworkHost["$x"]['PhysAddress'] , "</dd>
 							<dd><b>Comments</b><br/>", $onlinePrivateNetworkHost["$x"]['Comments'] , "</dd>
@@ -477,8 +519,8 @@
 		        <td headers='rssi-level'>", $onlinePrivateNetworkHost["$x"]['RSSI'] ,"</td>
 		        <td headers='connection-type'>", $onlinePrivateNetworkHost["$x"]['Connection'] , "</td>
 
-                <td headers='edit-button'><input type='button' value='Edit' tabindex='0' id=" , "'btn-" ,$onlinePrivateNetworkHost["$x"]['instanceID'] , "'", "  class=\"btn\"></input></td>            
-                <td headers='disconnect-button'><input type='button' id=" . "'online-X-" .$k. "'" . " value='X' tabindex='0' title=\"add this device to Blocked Devices List \" name='{\"dev_name\":\"$dev_name\", \"mac_addr\":\"$mac_addr\"}'  class=\"btn confirm\"></input></td>
+                <td headers='edit-button'><input type='button' value='Edit' tabindex='0' id=" , "'btn-" ,$onlinePrivateNetworkHost["$x"]['instanceID'] , "'", "  class=\"btn private\"></input></td>
+                <td headers='disconnect-button'>$style</td>
 		    </tr>    
 		    ";
 		}
@@ -497,11 +539,11 @@
 
 		</table>
 		<div  class="btn-group">
-			<a href="connected_devices_computers_add.php"  class="btn">Add Device with Reserved IP</a>
+			<a href="javascript:void(0)" class="btn add-Client lan">Add Device with Reserved IP</a>
 		</div>
 	</div> <!-- end .module -->
 
-	<div  class="module forms data">
+	<div id='offline-private' class="module forms data">
     <h2 id='offline-table-cap'>Offline Devices-Private Network</h2>
 		<table   class="data" summary="this table display off line devices for private network">
 		    <tr>
@@ -519,42 +561,21 @@
     	$mac_addr = $offlinePrivateNetworkHost["$x"]['PhysAddress'];
     	$AddrSrc  = $offlinePrivateNetworkHost["$x"]['AddressSource'];
 
+		if($offlinePrivateNetworkHost["$x"]['Blocked']) $style = "&nbsp;";
+		else $style = "<input type='button' id=" . "'offline-X-" .$k. "'" . " value='X' tabindex='0' title=\"remove computer named $dev_name\" name='{\"dev_name\":\"$dev_name\", \"mac_addr\":\"$mac_addr\"}'  class=\"btn confirm private\"></input>";
+
     	if($k % 2) $odd = "";
     	else $odd = " class='odd'";
     	echo "
 		    <tr $odd>
-	        <td headers='offline-device-host-name'><a href='javascript:void(0)' tabindex='0' class=\"label device-name\"><u>" , $offlinePrivateNetworkHost["$x"]['HostName'] , "</u></a>
+	        <td headers='offline-device-host-name'><a href='javascript:void(0)' tabindex='0' class=\"label device-name private\"><u>" , $offlinePrivateNetworkHost["$x"]['HostName'] , "</u></a>
 
 				<div class=\"device-info\">
-					<dl><dd><br/></dd>
-							<dd><b>IPV4 Address</b><br/>", $offlinePrivateNetworkHost["$x"]['IPAddress'] , "</dd>";
-
-			//Support IPV6 ADDRESS, maybe multiple address
-			$v6_count = intval(getStr("Device.Hosts.Host.".$offlinePrivateNetworkHost["$x"]['instanceID'].".IPv6AddressNumberOfEntries"));
-			if ($v6_count)	//has IPv6 address
-			{
-				$v6_global = array();
-				$v6_local  = array();
+					<dl><dd><br/></dd>";
 
-				for ($a=1; $a<=$v6_count; $a++)
-				{
-					$v6_addr = getStr("Device.Hosts.Host.".$offlinePrivateNetworkHost["$x"]['instanceID'].".IPv6Address.$a.IPAddress");
-					if (strstr($v6_addr, "fe80::")) {
-						array_push($v6_local, strtoupper($v6_addr));
-					}
-					else {
-						array_push($v6_global, strtoupper($v6_addr));
-					}
-				}
-				
-				foreach ($v6_global as $v){
-					echo '<dd><b>IPV6 Address</b><br/>'.$v.'</dd>';
-				}
-				
-				foreach ($v6_local as $v){
-					echo '<dd><b>Local Link IPV6 Address</b><br/>'.$v.'</dd>';
-				}
-			}
+						if ($offlinePrivateNetworkHost["$x"]['IPv4Address'] != '') {echo "<dd><b>IPV4 Address</b><br/>", $offlinePrivateNetworkHost["$x"]['IPv4Address'] , "</dd>";}
+						if ($offlinePrivateNetworkHost["$x"]['IPv6Address2'] != '') {echo "<dd><b>IPV6 Address</b><br/>", $offlinePrivateNetworkHost["$x"]['IPv6Address2'] , "</dd>";}
+						if ($offlinePrivateNetworkHost["$x"]['IPv6Address1'] != '') {echo "<dd><b>Local Link IPV6 Address</b><br/>", $offlinePrivateNetworkHost["$x"]['IPv6Address1'] , "</dd>";}
 			
 			echo "			<dd><b>MAC Address</b><br/>", $offlinePrivateNetworkHost["$x"]['PhysAddress'] , "</dd>
 						<dd><b>Comments</b><br/>", $offlinePrivateNetworkHost["$x"]['Comments'] , "</dd>
@@ -565,7 +586,7 @@
 	        <td headers='offline-device-dhcp-reserve'>", (($AddrSrc == "DHCP") ? "DHCP" : "Reserved IP") ,"</td>
 	        <td headers='offline-device-conncection'>",  $offlinePrivateNetworkHost["$x"]['Connection'] , "</td>
 
-            <td headers='offline-device-disconnect-button'><input type='button' id=" . "'offline-X-" .$k. "'" . " value='X' tabindex='0' title=\"disconnect computer\" name='{\"dev_name\":\"$dev_name\", \"mac_addr\":\"$mac_addr\"}'  class=\"btn confirm\"></input></td>
+            <td headers='offline-device-disconnect-button'>$style</td>
 		    </tr>    
 		";
 	}
@@ -585,7 +606,7 @@
 	</div> <!-- end .module -->
 
 	<div  class="form-btn">
-		<a tabindex='0' href="wireless_network_configuration_wps.php"  class="btn" >Add Wi-Fi Protected Setup (WPS) Client</a>
+		<a tabindex='0' href="javascript:void(0)"  class="btn add-Client wifi" >Add Wi-Fi Protected Setup (WPS) Client</a>
 	</div>
 
 	<!--Home Security part-->
@@ -629,12 +650,12 @@
 						'__id' => '1',
 						),
 					array(
-						//'X_CISCO_COM_HostName' => 'xhs-client-2',
+						'X_CISCO_COM_HostName' => 'xhs-client-2',
 						'Chaddr' => '00:00:ff:fe:ec:fc',
 						'__id' => '2',
 						),
 					array(
-						//'X_CISCO_COM_HostName' => 'xhs-client-3',
+						'X_CISCO_COM_HostName' => 'xhs-client-3',
 						'Chaddr' => '00:00:ff:fe:ec:ac',
 						'__id' => '3',
 						),
@@ -643,7 +664,7 @@
 
 			foreach ($PoolClientArr as $k => $entry) {
 
-				$PoolClientArr[$k] = array_merge($entry, array('IPv4Address' => getStr("Device.DHCPv4.Server.Pool.2.Client.".$PoolClientArr['__id'].".IPv4Address.1.IPAddress")));
+				$PoolClientArr[$k] = array_merge($entry, array('IPv4Address' => getStr("Device.DHCPv4.Server.Pool.2.Client.".$entry['__id'].".IPv4Address.1.IPAddress")));
 
 			}
 			//dump($PoolClientArr);
@@ -653,6 +674,7 @@
 			
 			foreach ($ids as $k => $v) {
 				$AssoDeviceArr[$k]['MACAddress'] = getStr("Device.WiFi.AccessPoint.3.AssociatedDevice.$v.MACAddress");
+				$AssoDeviceArr[$k]['RSSILevel'] = getStr("Device.WiFi.AccessPoint.3.AssociatedDevice.$v.SignalStrength");
 			}
 
 			if ($_DEBUG) {
@@ -674,21 +696,28 @@
 			//dump($AssoDeviceArr);
 
 			$onXHSClientArr  = array();
+			$onXHSAssoDeviceArr  = array();
 			$offXHSClientArr = array();
 
 			foreach ($PoolClientArr as $poolEntry) {
+				$match = "";
 				foreach ($AssoDeviceArr as $wifiEntry) {
 					if (! strcasecmp($poolEntry['Chaddr'], $wifiEntry['MACAddress'])) {
 						array_push($onXHSClientArr, $poolEntry);
+						array_push($onXHSAssoDeviceArr, $wifiEntry);
+						$match = "true";
 					}
 				}
+				if ( "true" != $match ) {
+					array_push($offXHSClientArr,  $poolEntry);
+				}
 			}
 
-			$offXHSArr = array_diff_assoc($PoolClientArr, $onXHSClientArr); 
+			//$offXHSArr = array_diff_assoc($PoolClientArr, $onXHSClientArr); 
 			//note that array key did not start with '0' while with orignal key in PoolClientArr
-			foreach ($offXHSArr as $offDevice) {
-				array_push($offXHSClientArr, $offDevice);
-			}
+			//foreach ($offXHSArr as $offDevice) {
+			//	array_push($offXHSClientArr, $offDevice);
+			//}
 			//dump($onXHSClientArr);
 			//dump($offXHSClientArr); 
 
@@ -698,10 +727,9 @@
 			for ($i=0; $i < $onXHS_clients_num; $i++) { 
 
 				$Hostname    = $onXHSClientArr[$i]['X_CISCO_COM_HostName'];
-				("" == $Hostname) && ($Hostname = 'Unknown Device');
-
 				$MACAddress  = strtoupper($onXHSClientArr[$i]['Chaddr']);
 				$IPv4Address = $onXHSClientArr[$i]['IPv4Address'];
+				$RSSILevel = $onXHSAssoDeviceArr[$i]['RSSILevel'];
 
 				if($i % 2) $odd = "";
 					else $odd = " class='odd'";
@@ -717,7 +745,7 @@
 				echo '</div>';	
                 echo '</td>';
                 echo '<td headers="XHS-ipv4-address">'. $IPv4Address;
-                echo '<td headers="XHS-rssi-level">'. $RSSILevel;
+                echo '<td headers="XHS-rssi-level">'. $RSSILevel." dBm";
                 echo '<td headers="XHS-mac-address">'. $MACAddress;
                 echo "<td headers=\"XHS-disconnect-button\"><input type='button' id=" . "'xhs-X-" .$i. "'" . "  value='X' tabindex='0' name=\"{'xhs-ssid':'3','dev_name':'$Hostname','mac_addr':'$MACAddress'}\" title='disconnect and deny Wi-Fi access to this device'  class='xhsSSID btn confirm'></input></td>";
 		    	echo '</tr>';
@@ -754,8 +782,6 @@
       		for ($i=0; $i < $offXHS_clients_num; $i++) { 
 
 				$Hostname    = $offXHSClientArr[$i]['X_CISCO_COM_HostName'];
-				("" == $Hostname) && ($Hostname = 'Unknown Device');
-
 				$MACAddress  = strtoupper($offXHSClientArr[$i]['Chaddr']);
 				$IPv4Address = $offXHSClientArr[$i]['IPv4Address'];
 
@@ -800,7 +826,7 @@
 	    */
 		$Hostspot_1_clients = array();
         $Hostspot_2_clients = array();
-		$rootObjName    = "Device.X_COMCAST_COM_GRE.SSID.1.AssociatedDevice.";
+		$rootObjName    = "Device.X_COMCAST-COM_GRE.Tunnel.1.SSID.1.AssociatedDevice.";
 		$paramNameArray = array($rootObjName);
 		$mapping_array  = array("MACAddress", "Hostname", "RSSILevel", "IPv4Address", "DHCPv4Status", "IPv6Address", 
 							"IPv6Prefix", "DHCPv6Status", "IPv6LinkLocalAddress");
@@ -810,12 +836,12 @@
 		    // status code 0 = success   
 			$Hotspot_1_clientsNum = count($Hotspot_1_idAr) - 1;
 		}
-		//$Hotspot_1_clientsNum = getStr("Device.X_COMCAST_COM_GRE.SSID.1.AssociatedDeviceNumberOfEntries");
+		//$Hotspot_1_clientsNum = getStr("Device.X_COMCAST-COM_GRE.Tunnel.1.SSID.1.AssociatedDeviceNumberOfEntries");
 	    if(!empty($Hotspot_1_clientsNum)){
 			$Hostspot_1_clients = getParaValues($rootObjName, $paramNameArray, $mapping_array);
 		}
 
-		$rootObjName    = "Device.X_COMCAST_COM_GRE.SSID.2.AssociatedDevice.";
+		$rootObjName    = "Device.X_COMCAST-COM_GRE.Tunnel.1.SSID.2.AssociatedDevice.";
 		$paramNameArray = array($rootObjName);
 
 		$Hotspot_2_idAr = DmExtGetInstanceIds($rootObjName);
@@ -823,7 +849,7 @@
 		    // status code 0 = success   
 			$Hotspot_2_clientsNum = count($Hotspot_2_idAr) - 1;
 		}
-		//$Hotspot_2_clientsNum = getStr("Device.X_COMCAST_COM_GRE.SSID.2.AssociatedDeviceNumberOfEntries");
+		//$Hotspot_2_clientsNum = getStr("Device.X_COMCAST-COM_GRE.Tunnel.1.SSID.2.AssociatedDeviceNumberOfEntries");
 		if(!empty($Hotspot_2_clientsNum)){
 			$Hostspot_2_clients = getParaValues($rootObjName, $paramNameArray, $mapping_array);
 		}
@@ -850,8 +876,6 @@
 
       		for ($i=0; $i < $clients_num; $i++) { 
 	      		$Hostname      = $Hotspot_clients[$i]['Hostname'];
-	      		("" == $Hostname) && ($Hostname = 'Unknown Device');
-
 	      		$MACAddress    = $Hotspot_clients[$i]['MACAddress'];
 	      		$RSSILevel     = $Hotspot_clients[$i]['RSSILevel'];
 	      		$IPv4Address   = $Hotspot_clients[$i]['IPv4Address'];
@@ -887,7 +911,7 @@
 				echo '</div>';	
                 echo '</td>';
                 echo '<td headers="xfinitywifi-ipv4-address">'. $IPv4Address;
-                echo '<td headers="xfinitywifi-rssi-level">'. $RSSILevel;
+                echo '<td headers="xfinitywifi-rssi-level">'. $RSSILevel." dBm";
                 echo '<td headers="xfinitywifi-mac-address">'. $MACAddress;
                 echo "<td headers=\"xfinitywifi-disconnect-button\"><input type='button' id=" . "'hotspot-X-" .$i. "'" . "  value='X' tabindex='0' name=\"{'gre_ssid':'$gre_ssid','dev_name':'$Hostname','mac_addr':'$MACAddress'}\" title='disconnect and deny Wi-Fi access to this device'  class='XfinitySSID btn confirm'></input></td>";
 		    	echo '</tr>';
@@ -943,7 +967,7 @@
         		<span  class=\"value\">" . $onlinePrivateNetworkHost["$i"]['Connection'] . "</span>
 			</div>
 			<div  class=\"form-row\">
-				<label for=\"ip\">Configuration:</label>
+				<label for=\"ip\" style='margin:4px 5px 0 0;'>Configuration:</label>
 				<input type=\"radio\" name=\"ip\" value=\"" .$AddrSrc. "\" " .( ($AddrSrc == "DHCP") ? "checked='checked'" : '' ). " class=\"ip_dchp\" id=\"ip_dhcp-" .$ID. "\" />
 				<label  class=\"radio\" for=\"ip_dhcp-" .$ID. "\">DHCP</label>
 				<br/>
@@ -955,14 +979,10 @@
 			    <span  class=\"readonlyLabel\">MAC Address:</span>
         		<span  class=\"value\">".$onlinePrivateNetworkHost["$i"]['PhysAddress']."</span>
 			</div>
-			<div id=\"static-mac" .$ID. "\"  class=\"static-mac form-row odd\">
-				<label for=\"mac_address-" .$ID. "\">MAC Address:</label>
-				<input type=\"text\" name=\"mac_address\" id=\"mac_address-" .$ID. "\" value=\"".$onlinePrivateNetworkHost["$i"]['PhysAddress']."\" />
-			</div>
 
       		<div id=\"static-ip" .$ID. "\"  class=\"static-ip form-row odd\" >
 				<label for=\"staticIPAddress-" .$ID. "\">Reserved IP Address:</label>
-				<input type=\"text\" value=\"". $onlinePrivateNetworkHost["$i"]['IPAddress'] ."\" id=\"staticIPAddress-" .$ID. "\" name=\"staticIPAddress\"  class=\"target\" />
+				<input type=\"text\" value=\"". $onlinePrivateNetworkHost["$i"]['IPv4Address'] ."\" id=\"staticIPAddress-" .$ID. "\" name=\"staticIPAddress\"  class=\"target\" />
 			</div>
 			<div  class=\"form-row\">
 				<label for=\"comment-" .$ID. "\" >Comments:</label>
